name: Wheels

on:
  push:
    branches:
      - master
      - stable
      - docs*
      - actions*
  workflow_dispatch:

jobs:
  sdist:
    name: Source distribution
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'

      - name: Install requirements
        run: pip install --user check-manifest twine

      - name: Run check-manifest
        run: |
          python -m check_manifest

      - name: Build sdist
        run: |
          python setup.py sdist -d wheelhouse

      - name: Install from sdist
        run: |
          pip install --user wheelhouse/*.tar.gz

      - name: Check sdist
        run: |
          python -m twine check wheelhouse/*

      - name: Upload sdist
        uses: actions/upload-artifact@v2
        with:
          name: wheels
          path: wheelhouse/*.tar.gz

  wheels:
    strategy:
      fail-fast: false
      matrix:
        include:
          - runs-on: ubuntu-latest
            cibw-arch: manylinux_x86_64
          - runs-on: ubuntu-latest
            cibw-arch: manylinux_i686
          - runs-on: macos-latest
            cibw-arch: macosx_x86_64
          - runs-on: windows-latest
            cibw-arch: win_amd64
          - runs-on: windows-latest
            cibw-arch: win32
            cmake-arch: -A Win32

    name: Wheels â€¢ ${{ matrix.cibw-arch }}
    runs-on: ${{ matrix.runs-on }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'

      - name: Install requirements
        run: |
          python -m pip install cibuildwheel twine

      - name: Configure cibuildwheel
        run: |
          echo "::set-env name=CIBW_BUILD::*-${{ matrix.cibw-arch }}"
          echo "::set-env name=CIBW_SKIP::pp*-*"
          echo "::set-env name=CIBW_ENVIRONMENT::PARSELMOUTH_EXTRA_CMAKE_ARGS='-DPREBUILT_PRAAT_DIR=$(pwd)/praat_build/praat'"
          echo "::set-env name=CIBW_ENVIRONMENT_LINUX::$CIBW_ENVIRONMENT PIP_ONLY_BINARY='numpy'"
          echo "::set-env name=CIBW_BEFORE_ALL::cmake -S . -B praat_build ${{ matrix.cmake-arch }} && cmake --build praat_build -j 2"
          echo "::set-env name=CIBW_BEFORE_ALL_LINUX::\(PY37_BIN=/opt/python/cp37-cp37m/bin && \$PY37_BIN/pip install cmake && ln -s \$PY37_BIN/cmake /usr/local/bin/cmake\) && \($CIBW_BEFORE_ALL\)"

      - name: Run cibuildwheel
        run: |
          cibuildwheel

      - name: Check built wheels
        run: |
          twine check wheelhouse/*

      - name: Upload built wheels
        uses: actions/upload-artifact@v2
        with:
          name: wheels
          path: wheelhouse/*.whl

      - name: Upload wheel for ReadTheDocs
        uses: actions/upload-artifact@v2
        with:
          name: rtd-wheel
          path: wheelhouse/praat_parselmouth-*-cp37-cp37m-manylinux2010_x86_64.whl
          if-no-files-found: error
        if: runner.os == 'Linux' && matrix.cibw-arch == 'manylinux_x86_64'
