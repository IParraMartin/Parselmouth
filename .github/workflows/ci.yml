name: CI

on: [push, pull_request, workflow_dispatch]

jobs:
  tests:
    strategy:
      fail-fast: false
      matrix:
        include:
          - runs-on: ubuntu-latest
            python: 2.7
            arch: x64
          - runs-on: ubuntu-latest
            python: 3.5
            arch: x64
          - runs-on: ubuntu-latest
            python: 3.6
            arch: x64
          - runs-on: ubuntu-latest
            python: 3.7
            arch: x64
          - runs-on: ubuntu-latest
            python: 3.8
            arch: x64
            run-praat-tests: true
            name-extra: ' (with Praat tests)'
          - runs-on: ubuntu-latest
            python: 3.9
            arch: x64

          - runs-on: ubuntu-latest
            python: 3.8
            arch: x64
            gcc: 9
            name-extra: ' (GCC 9)'
          - runs-on: ubuntu-latest
            python: 3.8
            arch: x64
            clang: 9
            name-extra: ' (Clang 9)'

          - runs-on: ubuntu-latest
            python: 2.7
            arch: x64
            release: true
            name-extra: ' (Release)'
          - runs-on: ubuntu-latest
            python: 3.8
            arch: x64
            release: true
            name-extra: ' (Release)'

          - runs-on: macos-latest
            python: 2.7
            arch: x64
          - runs-on: macos-latest
            python: 3.8
            arch: x64
            run-praat-tests: true
            name-extra: ' (with Praat tests)'
          - runs-on: macos-latest
            python: 3.8
            arch: x64
            release: true
            name-extra: ' (Release)'

          - runs-on: windows-latest
            python: 2.7
            arch: x64
          - runs-on: windows-latest
            python: 3.8
            arch: x64
            run-praat-tests: true
            name-extra: ' (with Praat tests)'
          - runs-on: windows-latest
            python: 2.7
            arch: x86
            name-extra: ' (32-bit)'
          - runs-on: windows-latest
            python: 3.8
            arch: x86
            name-extra: ' (32-bit)'
          - runs-on: windows-latest
            python: 3.8
            arch: x64
            release: true
            name-extra: ' (Release)'

    name: Python ${{ matrix.python }}${{ matrix.name-extra }} â€¢ ${{ matrix.runs-on }}
    runs-on: ${{ matrix.runs-on }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Python ${{ matrix.python }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python }}
          architecture: ${{ matrix.arch }}

      - name: Setup CMake
        uses: jwlawson/actions-setup-cmake@v1.4

      - name: Install requirements
        run: |
          pip install --user --upgrade pip setuptools wheel
          pip install --user --upgrade -r tests/requirements.txt

      - name: Select GCC
        shell: bash
        run: |
          echo "CC=gcc-${{ matrix.gcc }}" >> $GITHUB_ENV
          echo "CXX=g++-${{ matrix.gcc }}" >> $GITHUB_ENV
        if: matrix.clang

      - name: Select Clang
        shell: bash
        run: |
          echo "CC=clang-${{ matrix.clang }}" >> $GITHUB_ENV
          echo "CXX=clang++-${{ matrix.clang }}" >> $GITHUB_ENV
        if: matrix.clang

      - name: Select 32-bit Visual Studio
        shell: bash
        run: |
          echo "CMAKE_ARCH=-A Win32" >> $GITHUB_ENV
        if: runner.os == 'Windows' && matrix.arch == 'x86'

      - name: Select Debug build
        shell: bash
        run: |
          echo "CMAKE_BUILD_TYPE=Debug" >> $GITHUB_ENV
        if: matrix.release != true

      - name: Select Release build
        shell: bash
        run: |
          echo "CMAKE_BUILD_TYPE=Release" >> $GITHUB_ENV
        if: matrix.release

      - name: Configure
        shell: bash
        run: |
          cmake -S . -B build $CMAKE_ARCH -DCMAKE_BUILD_TYPE=$CMAKE_BUILD_TYPE -DPYTHON_EXECUTABLE="$(which python)"

      - name: Compile
        run: cmake --build build -j 2

      - name: Select Praat tests to run
        run: |
          echo "PYTEST_ADDOPTS=--run-praat-tests -v" >> $GITHUB_ENV
        if: matrix.run-praat-tests

      - name: Run tests
        run: cmake --build build --target tests
