language: cpp
dist: trusty
sudo: false
cache:
  ccache: true
  directories:
    - $HOME/Library/Caches/Homebrew

env:
  global:
    - BUILD_TYPE=Debug
compiler: gcc

matrix:
  include:
    - env: PYTHON=2.7 GCC=5
      addons: &gcc5
        apt:
          sources: [ubuntu-toolchain-r-test]
          packages: [g++-5]

    - env: PYTHON=3.5 GCC=5
      addons:
        apt:
          sources: [ubuntu-toolchain-r-test, deadsnakes]
          packages: [g++-5, python3.5-dev, python3.5-venv]

    - env: PYTHON=3.6 GCC=5
      addons: *gcc5

    - env: PYTHON=3.7 GCC=5
      # https://github.com/deadsnakes/travis-ci-python3.7-example
      dist: xenial
      addons:
        apt:
          sources: [ubuntu-toolchain-r-test, deadsnakes]
          packages: [g++-5, python3.7-dev, python3.7-venv]

    - env: PYTHON=3.8 GCC=5
      dist: xenial
      addons:
        apt:
          sources: [ubuntu-toolchain-r-test, deadsnakes]
          packages: [g++-5, python3.8-dev, python3.8-venv]

    - env: PYTHON=2.7 GCC=5 BUILD_TYPE=Release
      addons: *gcc5

    - env: PYTHON=3.6 GCC=5 BUILD_TYPE=Release
      addons: *gcc5

    - env: PYTHON=2.7 GCC=7
      addons: &gcc7
        apt:
          sources: [ubuntu-toolchain-r-test]
          packages: [g++-7]

    - env: PYTHON=3.6 GCC=7
      addons: *gcc7

    - env: PYTHON=2.7 CLANG=5.0
      compiler: clang
      addons:
        apt:
          sources: [llvm-toolchain-trusty-5.0, ubuntu-toolchain-r-test]
          packages: [clang-5.0, libstdc++-7-dev]

    - env: PYTHON=3.6 CLANG=5.0
      compiler: clang
      addons:
        apt:
          sources: [llvm-toolchain-trusty-5.0, ubuntu-toolchain-r-test]
          packages: [clang-5.0, libstdc++-7-dev]

    - env: PYTHON=2.7
      os: osx
      compiler: clang

    - env: PYTHON=3.7
      os: osx
      compiler: clang

    - stage: wheels
      if: branch != docs
      script:
        - $PYTHON_CMD setup.py -q sdist -d wheelhouse
      before_deploy:
        - &bintray-before-deploy |
          PARSELMOUTH_VERSION=`python setup.py --version`
          echo "{
            \"package\": {
              \"name\": \"CI-Wheels\",
              \"repo\": \"Parselmouth\",
              \"subject\": \"yannickjadoul\"
            },
            \"version\": {
                \"name\": \"$TRAVIS_BRANCH-$PARSELMOUTH_VERSION\",
                \"desc\": \"Latest wheels for $TRAVIS_BRANCH branch for version $PARSELMOUTH_VERSION\",
                \"released\": \"\",
                \"vcs_tag\": \"$TRAVIS_TAG\"
            },
            \"files\": [{\"includePattern\": \"wheelhouse/(.*)\", \"uploadPattern\": \"$TRAVIS_BRANCH/\$1\", \"matrixParams\": { \"override\": 1 }}],
            \"publish\": true
          }" > bintray.json
      deploy:
        - &bintray-deploy
          provider: bintray
          file: bintray.json
          user: YannickJadoul
          key:
            secure: an0RPZkTc9vqCe9mdik94fSImmnCsiZLmd6HPncfczfGWJdo5iEP9FbmdHMC47mnl+kNiHGS/3dyhGtkbtwAihGLOVfPjyTk4JXac7c4YwhYAvlzRWeKafti0Cg1lmdGlX1CUowDzpuKROiOqjeN4fYvKjVfCqNCVPvluQpkX/RVNAdzbNQggggSvh3Blf2WNVflGdd0RNUr1Z4gZGyH6DbkZ2zbOt7PRU0cYm2NEbgN/mKPGpoKK1voWrSa57r3DYo+nbtk76oTGnqK7j8E4pOxr0uUCSwAYj5cIoOlcErZICDyyNLULgROPv8oXqhpZ8HkyTOMkUK2Lniq9h5kwmkby9GiRFBtLMJTU9rAHTwmP9AdF2eKngQf69Tw/f9UqvDjpsoBxshoZecI+Wsf5IJ/qc8Zffx4lm7k4uHl+Y8fcXCi5VtqODtOwSa/KIkGSLIus4PKaTO++7jmUA/DKEhUgTQfosYdUUUm2lua3ZMJ1o62M73XFFUxn5G5NaR5G/mosgsoFcJ3vnejt+ljf7j5C7Du7Hx3gZDwMzhrYG2DJEoRUNEahJV4djFsiDyIhoyYSsuLr0jQnT3//f5uqSlMP7PE4f98NEQxixM4naZaizBggyyAXwvlFxqqmxJxDq5dZCVgJTc3dTeEgJCi/Q5vURZqWvXt/EeLyB7anO4=
          skip_cleanup: true
          on:
            all_branches: true
        - &github-releases-deploy
          provider: releases
          api_key:
            secure: a/odACohfUh1T00U/v2T9TCiY4KRfgUwBsFJHf1mzmaphZIPwY8lLgYC1HvV7FD+ijrV9FQVxh+u5A+JbHlDSioW5LE5WXaB4KOYUphcCgoy47/FbyxJpQWNy62segip6/RDvKhpgHCc0Ii8qgXBSLtjyoiCRxbXyfX2u5EbD5fkU5Wip4o7Mqk2cp5NEXWx/u76SvOHH+zhueM2MkP4HvPSMI20jFs1vxb4VNK1EE++GdcZq3mwWFAJyPkuMVKxSF430Svm/qkE33btFQpdtAkUdh0jVu+tBD3RBOHvPAKab4uvDU2Pl5WFl+LYwyYKoZYQAIKVhGrwMbb5LlAaR0sfhq4YqT8HMqPBUPEOMo6OQ3zBoQER7QzHPQRFJBPptNMLtc3ugo0YdDc7bHlocDCah2TErlrzEzNxiC0vFCYv+hVSllWtQwMf56s/6LTQVxgska63tqUWbfA6M4yV37s9wJQsyrdlKnepJWdDDm1WxrZ0nhwxMN/tR+TmYi+tnDkY+JxPwBXyibg/ZARn+7spdjrKbE3uKFwQG2OqkJXiW3LOc7VDyK/s5mj1qJmHDTjTOlwyw5BDclkHAF3hvnci7BefkRRKpba01neFmoMHhdidhvvwLCxhEPTgGKW0rwUfMPJpElWJkjI1OmCpwyyEeOP0IOIZKmvdajsINJY=
          tag_name: $TRAVIS_TAG
          file_glob: true
          file: wheelhouse/*
          skip_cleanup: true
          on:
            repo: YannickJadoul/Parselmouth
            tags: true
          draft: true

    - stage: wheels
      env:
        - secure: MXiwE0nmtuJfodSofdsRwD03JtbI9VgwHs+h5gsn/lP/ZrdKDSHPIOfLa2LyaFJWzwv45+NKxAyfJWBOYQ06eSq036FdiBsWkYmuSQcEGkKdB+EDxd4lUX3MxeTGMvBCng3PPyM2aDm117FD6xQTjblvpd87cJyCQWuanEczmj/5vGgBQKqHuOdH2CfoKbtzeo46uS/taNbI5jhGaGPeKk+VmzJtO79CdAGathvb2W0JKTqEsQGszty6DC1Gdt1bNQ5N+MJ2KFC/yGvG0/jgXJYB5s3viCHW0dez5Dl5Bqk4VVaCsqYg+kZGtI7FznSvFXybBj7g4HlNH80DQXlhxwk7iTHfKUQFrwSUMg0ojibERiHG0/UJXFf5fttjbU/6+Mdag+Bxb5J+f/fGZu6JEsEIoEbXBgi6Q5weYh0r2qQ0g/qZpF6g9eEQHdW6ATg9rBFqJPsmGZmqFYwvTi5cu+jGmVihl8nOir7WfyZbnEsd0TcDgDraABjLL18SDwpbFahcbr4L+rzd+4J3j6ToO78SQOMJglprZM08YReTXzdkXtINAOogoNQWfbzUpXL9AjGAcTLmbzhJwP/WAIzFDuM2X5ElOwvwqjL4gsSDDwGsn1cNbMp2pN4UlptoxpyLAF5IiYcw6TrgqzKq6R5GYnCNcsXMpsbkNGd0AcJoK/U=
      os: linux
      sudo: required
      services:
        - docker
      install:
        - $PYTHON_CMD -m pip install --user cibuildwheel
        - mkdir gcc-i386 && wget -q https://github.com/Noctem/pogeo-toolchain/releases/download/v1.5/gcc-7.3-centos5-i686.tar.bz2 -O - | tar xj -C gcc-i386 --strip-components=1
        - mkdir gcc-x86_64 && wget -q https://github.com/Noctem/pogeo-toolchain/releases/download/v1.5/gcc-7.3-centos5-x86-64.tar.bz2 -O - | tar xj -C gcc-x86_64 --strip-components=1
        - mkdir ccache && wget -q https://www.samba.org/ftp/ccache/ccache-3.6.tar.bz2 -O - | tar xj -C ccache --strip-components=1
      script:
        - export CIBW_ENVIRONMENT='ARCH=`uname -i` PATH="`pwd`/gcc-$ARCH/bin:$PATH" CC="ccache cc" CXX="ccache c++" CXXFLAGS="-static-libstdc++" CCACHE_BASEDIR=`python -c "import tempfile; import os; print(os.path.realpath(tempfile.gettempdir()))"` CCACHE_DIR=/host'$HOME'/.ccache PARSELMOUTH_EXTRA_CMAKE_ARGS="-DPREBUILT_PRAAT_DIR=\"`pwd`/praat_build_$ARCH/praat\""'
        - export CIBW_MANYLINUX_X86_64_IMAGE='manylinux1' CIBW_MANYLINUX_I686_IMAGE='manylinux1'
        - export CIBW_BEFORE_BUILD='pip install cmake && [ -d ccache/$ARCH ] || (unset CC CXX CXXFLAGS && mkdir ccache/$ARCH && cd ccache/$ARCH && ../configure && make install) && [ -d praat_build_$ARCH ] || (mkdir praat_build_$ARCH && cd praat_build_$ARCH && cmake -DCMAKE_BUILD_TYPE=Release .. && make praat -j 2)'
        - export CIBW_SKIP='pp*-*'
        - if [ "$TRAVIS_BRANCH" == "docs" ]; then export CIBW_BUILD="cp36-manylinux_x86_64"; fi
        - cibuildwheel
      before_deploy:
        - *bintray-before-deploy
      deploy:
        - *bintray-deploy
        - *github-releases-deploy
      after_deploy:
        - curl -X POST -d "branches=$TRAVIS_BRANCH" -d "token=$READTHEDOCS_WEBHOOK_TOKEN" https://readthedocs.org/api/v2/webhook/parselmouth/15985/

    - stage: wheels
      if: branch != docs
      os: osx
      compiler: clang
      install:
        - $PYTHON_CMD -m pip install cibuildwheel
      script:
        - mkdir praat_build && cd praat_build && cmake -DCMAKE_BUILD_TYPE=Release .. && make praat -j 2 && cd ..
        - export PARSELMOUTH_EXTRA_CMAKE_ARGS="-DPREBUILT_PRAAT_DIR=\"`pwd`/praat_build/praat\""
        - export CCACHE_BASEDIR=`$PYTHON_CMD -c "import tempfile; import os; print(os.path.realpath(tempfile.gettempdir()))"`
        - cibuildwheel
      before_deploy:
        - *bintray-before-deploy
      deploy:
        - *bintray-deploy
        - *github-releases-deploy

branches:
  except:
    - appveyor

stages:
  - name: test
    if: branch != docs
  - name: wheels

before_install:
  - set -e
  - |
    if [ "$TRAVIS_OS_NAME" == "linux" ]; then
      if [ -n "$GCC" ]; then
        CC=gcc-$GCC
        CXX=g++-$GCC
      elif [ -n "$CLANG" ]; then
        CC="ccache clang-$CLANG -Qunused-arguments"
        CXX="ccache clang++-$CLANG -Qunused-arguments"
        # -Qunused-arguments: https://petereisentraut.blogspot.com/2011/05/ccache-and-clang.html
      fi
      if [ "$PYTHON" == "3.5" ] || [ "$PYTHON" == "3.7" ] || [ "$PYTHON" == "3.8" ]; then
        python$PYTHON -m ensurepip --user
      elif [ "$PYTHON" = "3.6" ]; then
        pyenv global system $PYTHON # https://github.com/travis-ci/travis-ci/issues/8363
      fi
      PYTHON_CMD=python$PYTHON
    elif [ "$TRAVIS_OS_NAME" == "osx" ]; then
      unset -f cd; # Workaround for weird 'shell_session_update' issue: https://github.com/travis-ci/travis-ci/issues/8703
      brew unlink python@2
      brew update > /dev/null
      brew install ccache
      export PATH=/usr/local/opt/ccache/libexec:$PATH
      if [ "${PYTHON%%.*}" == "3" ]; then
        brew upgrade python
        PYTHON_CMD=python3
      else
        # brew unlink python && brew install python@2 || brew upgrade python@2
        brew install python@2 || brew upgrade python@2 && brew link python@2
        PYTHON_CMD=python2
      fi
      CC=clang
      CXX=clang++
    fi
    $PYTHON_CMD -m pip install --user --upgrade pip wheel

install:
  - $PYTHON_CMD -m pip install --user --upgrade numpy
  - $PYTHON_CMD -m pip install --user -r tests/requirements.txt

script:
  - mkdir build && cd build && cmake -DPYBIND11_PYTHON_VERSION=$PYTHON -DCMAKE_BUILD_TYPE=$BUILD_TYPE ..
  - make all -j 2
  - make tests
